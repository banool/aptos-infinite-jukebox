    /// I wonder if instead each vote should be stored on that account,
    /// I believe maintaining a map of address to struct is an antipatttern
    /// in Aptos. If so, we would need this module to be granted permission
    /// to read and wipe the Vote from an account. We would also need to be
    /// able to list all addresses that have this struct (Vote). Potentially
    /// instead we could have some kind of incrementing counter for each song
    /// player and each vote contains a value indicating which round it is for.
    /// This leads into greater questions around history. You could design a
    /// module where the votes from all accounts are maintained in their storage,
    /// and this module could record the vote history, but that seems unnecessary
    /// given the blockchain is a historical ledger. As in, we should only store
    /// the current state (or info necessary to build the next state, which is
    /// the purpose of this struct).
    /// 
    /// The current song clients should be playing. The current plan is users
    /// can derive when they should be up to in the song by looking at when
    /// the transaction was executed to set current_song. I could also have
    /// the server pass it in.    
